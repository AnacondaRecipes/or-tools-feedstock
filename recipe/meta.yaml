{% set version = "9.9" %}
{% set pybind11_abseil_commit_id = "52f2739" %}
{% set pybind11_protobuf_commit_id = "3b11990" %}

package:
  name: or-tools-package
  version: {{ version }}

source:
  - url: https://github.com/google/or-tools/archive/v{{ version }}.tar.gz
    sha256: 8c17b1b5b05d925ed03685522172ca87c2912891d57a5e0d5dcaeff8f06a4698
    patches:
      - patches/0001-3.13_support.patch
      - patches/0002-add-pybind11_abseil-as-dependency.patch
      - patches/0003-s390x_cast.patch
  - url: https://github.com/pybind/pybind11_protobuf/archive/{{ pybind11_protobuf_commit_id }}.tar.gz
    sha256: 8747cbedbc9408b197858fa327b186b0340770721b9848471c040821eb10eae6
    folder: pybind11_protobuf
    patches:
      - patches/pybind11_protobuf/0001-fix-python-headers.patch
      - patches/pybind11_protobuf/0002-add-install-and-cmake-config-generation.patch
      - patches/pybind11_protobuf/0003-use-installed-abseil-protobuf-pybind11.patch
      - patches/pybind11_protobuf/0004-use-modern-findpython-module.patch
      - patches/pybind11_protobuf/0005-install-headers.patch
      - patches/pybind11_protobuf/0006-apply-or-tools-team-patch.patch
  - url: https://github.com/pybind/pybind11_abseil/archive/{{ pybind11_abseil_commit_id }}.tar.gz
    sha256: d977f05b4be67c49f3d2b4795d0daf513f7098a0261b66badb0fa573a1f01391
    folder: pybind11_abseil
    patches:
      - patches/pybind11_abseil/0001-use-installed-abseil-and-pybind11.patch
      - patches/pybind11_abseil/0002-use-modern-findpython-module.patch
      - patches/pybind11_abseil/0003-apply-or-tools-team-patch.patch
      - patches/pybind11_abseil/0004-add-cmake-target-and-config-generation.patch
      - patches/pybind11_abseil/0005-install-headers.patch

# The meta package
build:
  number: 0
  # coin-or-* rely on openblas not available on Windows
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - git  # [not win]
    - cmake >=3.18
    - ninja
    - pkg-config
    - patch  # [not win]
  host:
    - eigen 3.4.0
    - libabseil 20240116.2*
    - libprotobuf {{ libprotobuf }}
    - re2 >=2024-02-01
    - zlib
    # coin or deps
    - coin-or-utils 2.11.6
    - coin-or-osi 0.108.7
    - coin-or-clp 1.17.7
    - coin-or-cgl 0.60.5
    - coin-or-cbc 2.10.7
    - python

outputs:
  # The core package
  - name: libortools
    script: build-cpp.sh
    build:
      run_exports:
        - {{ pin_subpackage('libortools', max_pin='x.x') }}
      ignore_run_exports_from:
        - python
      missing_dso_whitelist:  # [s390x or (osx and x86_64)]
        - '$RPATH/ld64.so.1'  # [s390x]
        # Conda build failing to identify this shared library.
        # A test has been added instead for osx-64
        - '*/libortools.9.dylib'  # [osx and x86_64]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - git  # [not win]
        - cmake >=3.18
        - ninja
        - pkg-config
        - patch  # [not win]
      host:
        - eigen 3.4.0
        - libabseil 20240116.2*
        - libprotobuf {{ libprotobuf }}
        - re2 >=2024-02-01
        - zlib
        # coin or deps
        - coin-or-utils 2.11.6
        - coin-or-osi 0.108.7
        - coin-or-clp 1.17.7
        - coin-or-cgl 0.60.5
        - coin-or-cbc 2.10.7
        # Source: https://github.com/google/or-tools/blob/stable/cmake/dependencies/CMakeLists.txt
        # fake python dependency to avoid conda-smithy collapsing the builds per arch;
        # we can remove this once we manage to base the python bindings on libortools
        - python
      run_constrained:
        # make sure we don't co-install with old version of previous package name
        - ortools-cpp ={{ version }}

    test:
      commands:
        - test -f $PREFIX/lib/libortools${SHLIB_EXT}
        - test -f $PREFIX/lib/cmake/ortools/ortoolsTargets.cmake
        - test -f $PREFIX/lib/cmake/ortools/ortoolsConfig.cmake
        - test -f $PREFIX/include/ortools_export.h
        - test -f $PREFIX/include/ortools/algorithms/dense_doubly_linked_list.h

  # for compatibility with previous output "ortools-cpp"
  - name: ortools-cpp
    build:
      missing_dso_whitelist:  # [s390x or (osx and x86_64)]
        - '$RPATH/ld64.so.1'  # [s390x]
        # Conda build failing to identify this shared library.
        # A test has been added instead for osx-64
        - '*/libortools.9.dylib'  # [osx and x86_64]
      run_exports:
        - {{ pin_subpackage('libortools', max_pin='x.x') }}
    requirements:
      host:
        - {{ pin_subpackage('libortools', exact=True) }}
      run:
        - {{ pin_subpackage('libortools', exact=True) }}
    test:
      commands:
        # tested in other outputs
        - echo "hello"

  # The python package.
  - name: ortools-python
    script: build-python.sh
    build:
      missing_dso_whitelist:  # [s390x or (osx and x86_64)]
        - '$RPATH/ld64.so.1'  # [s390x]
        # Conda build failing to identify this shared library.
        # A test has been added instead for osx-64
        - '*/libortools.9.dylib'  # [osx and x86_64]

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake >=3.18
        - git  # [not win]
        - ninja
        - python
        - mypy-protobuf
        - mypy
        - pkg-config
        - swig >=4.0
        - patch  # [not win]
      host:
        - python
        - pip
        - absl-py >=2.0.0
        - numpy
        - mypy-protobuf 3.3.0
        - mypy
        - protobuf
        - scipy >=1.10
        - wheel
        - setuptools
        # C/C++ deps
        - eigen 3.4.0
        - libabseil 20240116.2*
        - libprotobuf {{ libprotobuf }}
        - libprotobuf-python-headers {{ libprotobuf }}
        - pybind11 >=2.11.1
        # Source: https://github.com/google/or-tools/blob/stable/ortools/python/setup.py.in#L44
        - pandas >=2.0.0
        - immutabledict >=3.0.0
        # - pybind11_protobuf 3b11990
        - {{ pin_subpackage('pybind11_protobuf', exact=True) }}
        # - pybind11_abseil 52f2739
        - {{ pin_subpackage('pybind11_abseil', exact=True) }}
        - re2 >=2024-02-01
        - zlib
        # coin or deps
        - coin-or-utils 2.11.6
        - coin-or-osi 0.108.7
        - coin-or-clp 1.17.7
        - coin-or-cgl 0.60.5
        - coin-or-cbc 2.10.7
      run:
        - python
        - absl-py >=2.0.0
        - immutabledict >=3.0.0
        - mypy-protobuf
        - {{ pin_compatible('numpy') }}
        - protobuf {{ libprotobuf }}
        - scipy >=1.10
        # Source: https://github.com/google/or-tools/blob/stable/ortools/python/setup.py.in#L44
        - pandas >=2.0.0
        # - pybind11_protobuf 3b11990
        - {{ pin_subpackage('pybind11_protobuf', exact=True) }}
        # - pybind11_abseil 52f2739
        - {{ pin_subpackage('pybind11_abseil', exact=True) }}
    test:
      requires:
        - pip
      imports:
        - ortools
        - ortools.linear_solver.pywraplp
      commands:
        - pip check
        - ${PYTHON} cmake/samples/python/sample.py
        - ${PYTHON} ortools/sat/samples/assignment_sat.py
        - test -f ${SP_DIR}/ortools/.libs/libortools.9.dylib  # [osx and x86_64]
      source_files:
        - cmake/samples/python/sample.py
        - ortools/sat/samples/assignment_sat.py

  # The pybind11_protobuf package, used by ortools-python.
  - name: pybind11_protobuf
    # The version is a placeholder, to avoid setting its version
    # like the rest of the recipe (e.g. 9.9). The commit id is
    # used (see above).
    version: {{ pybind11_protobuf_commit_id }}
    script: build-pybind11_protobuf.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake >=3.18
        - ninja
        - python
      host:
        - python
        # These must align with ortools-python,
        # rather than upstream
        - libabseil 20240116.2*
        - libprotobuf {{ libprotobuf }}
        - libprotobuf-python-headers {{ libprotobuf }}
        - pybind11 >=2.11.1
      run:
        - python

  # The pybind11_abseil package, used by ortools-python
  - name: pybind11_abseil
    # The version is a placeholder, to avoid setting its version
    # like the rest of the recipe (e.g. 9.9). The commit id is
    # used (see above).
    version: {{ pybind11_abseil_commit_id }}
    script: build-pybind11_abseil.sh
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake >=3.18
        - ninja
        - python
      host:
        - python
        # These must align with ortools-python,
        # rather than upstream
        - libabseil 20240116.2*
        - libprotobuf {{ libprotobuf }}
        - pybind11 >=2.11.1
      run:
        - python
        - absl-py
        - numpy >=1.13.3

about:
  home: https://developers.google.com/optimization
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Google Operations Research Tools (or-tools) python package
  description: |
    OR-Tools is an open source software suite for optimization, tuned for tackling
    the world's toughest problems in vehicle routing, flows, integer and linear
    programming, and constraint programming.

    After modeling your problem in the programming language of your choice, you
    can use any of a half dozen solvers to solve it: commercial solvers such as
    Gurobi or CPLEX, or open-source solvers such as SCIP, GLPK, or Google's GLOP
    and award-winning CP-SAT.
  dev_url: https://github.com/google/or-tools

extra:
  recipe-maintainers:
    - wolfv
    - BastianZim
    - h-vetinari
  feedstock-name: or-tools
